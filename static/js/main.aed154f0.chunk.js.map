{"version":3,"sources":["redux/AppReducer.js","redux/RootReducer.js","redux/ConfigureStore.js","theme.js","redux/AppActions.js","redux/Selectors.js","components/Main/Main.styles.js","components/Main/Main.jsx","components/Header/Header.styles.js","components/Header/Header.jsx","components/Sidebar/Sidebar.styles.js","components/Sidebar/Sidebar.jsx","API/Shipments.js","components/App/App.styles.js","components/App/App.js","serviceWorker.js","index.js"],"names":["INITIAL_STATE","isSidebarOpen","shipmentData","undefined","selectedCompany","shouldFetch","AppReducer","state","payload","type","boxes","_","clone","index","findIndex","id","rootReducer","combineReducers","App","persistConfig","key","storage","persistedReducer","persistReducer","store","createStore","persistor","persistStore","createMuiTheme","palette","primary","main","secondary","light","text","setIsOpen","setShouldFetch","getIsSidebarOpen","getShipmentData","getSelectedCompany","getShouldFetch","makeStyles","theme","flexGrow","textAlign","marginTop","marginLeft","breakpoints","up","flexShrink","details","spinner","input","minWidth","toolbar","mixins","Main","location","useLocation","dispatch","useDispatch","activeRoute","pathname","substring","useState","requiredBays","setRequiredBays","useSelector","useTheme","classes","useStyles","useEffect","forEach","company","name","split","map","e","sum","reduce","a","b","Math","ceil","exact","path","className","CircularProgress","Typography","variant","Link","href","email","gutterBottom","TextField","onChange","target","value","header","zIndex","width","display","down","alignItems","justifyContent","menuButton","marginRight","spacing","search","position","borderRadius","shape","backgroundColor","fade","common","white","searchIcon","padding","height","pointerEvents","inputRoot","color","inputInput","paddingLeft","transition","transitions","create","Header","searchFilter","setSearchFilter","React","alertOpen","setAlertOpen","handleAlertClose","event","reason","Alert","props","elevation","AppBar","Toolbar","IconButton","onClick","aria-label","Menu","noWrap","Search","InputBase","placeholder","root","inputProps","Button","Snackbar","open","autoHideDuration","onClose","severity","drawer","drawerPaper","content","Sidebar","Divider","List","ListItem","component","button","to","ListItemText","Hidden","smUp","implementation","Drawer","anchor","paper","ModalProps","keepMounted","xsDown","shipmentsAPI","getShipments","axios","get","app","ShipmentsAPI","data","sort","textA","toUpperCase","textB","localeCompare","filter","toLowerCase","includes","Boolean","window","hostname","match","ReactDOM","render","loading","ThemeProvider","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.aed154f0.chunk.js","sourcesContent":["import _ from \"lodash\";\n\nconst INITIAL_STATE = {\n  isSidebarOpen: false,\n  shipmentData: undefined,\n  selectedCompany: undefined,\n  shouldFetch: true,\n};\n\nfunction AppReducer(state = INITIAL_STATE, { payload, type }) {\n  switch (type) {\n    case \"SET_IS_OPEN\":\n      return {\n        ...state,\n        isSidebarOpen: payload,\n      };\n    case \"SET_SHIPMENT_DATA\":\n      return {\n        ...state,\n        shipmentData: payload,\n      };\n    case \"SET_SHOULD_FETCH\":\n      return {\n        ...state,\n        shouldFetch: payload,\n      };\n    case \"MODIFY_BOXES\":\n      const boxes = payload;\n      return {\n        ...state,\n        selectedCompany: { ...state.selectedCompany, boxes },\n      };\n    case \"SAVE_SHIPMENT_DATA\":\n      // clone shipment data (shipments.json) for editing\n      const shipmentData = _.clone(state.shipmentData);\n      // find the index of currently selected company from the list of all companies\n      const index = shipmentData.findIndex(({ id }) => id === state.selectedCompany.id);\n      // swap the modified selected company in the list of all companies\n      shipmentData[index] = state.selectedCompany;\n\n      return {\n        ...state,\n        shipmentData,\n      };\n    case \"SET_SELECTED_COMPANY\":\n      return {\n        ...state,\n        selectedCompany: payload,\n      };\n    default:\n      return state;\n  }\n}\nexport default AppReducer;\n","import { combineReducers } from \"redux\";\nimport AppReducer from \"./AppReducer\";\n\nconst rootReducer = combineReducers({\n  App: AppReducer,\n});\nexport default rootReducer;\n","import { createStore } from \"redux\";\nimport { persistStore, persistReducer } from \"redux-persist\";\nimport storage from \"redux-persist/lib/storage\";\nimport rootReducer from \"./RootReducer\";\n\nconst persistConfig = {\n  key: \"root\",\n  storage,\n};\n\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\n\nexport let store = createStore(persistedReducer);\nexport let persistor = persistStore(store);\n","import { createMuiTheme } from \"@material-ui/core/styles\";\r\n\r\nexport default createMuiTheme({\r\n  palette: {\r\n    primary: {\r\n      main: \"#00897B\",\r\n    },\r\n    secondary: {\r\n      main: \"#01579B\",\r\n      light: \"rgba(255, 255, 255, 0.5)\",\r\n    },\r\n    text: {\r\n      primary: \"#1C2126\",\r\n      secondary: \"#727981\",\r\n    },\r\n  },\r\n});\r\n","export const setIsOpen = (payload) => {\n  return {\n    type: \"SET_IS_OPEN\",\n    payload,\n  };\n};\nexport const setShouldFetch = (payload) => {\n  return {\n    type: \"SET_SHOULD_FETCH\",\n    payload,\n  };\n};\nexport const setShipmentData = (payload) => {\n  return {\n    type: \"SET_SHIPMENT_DATA\",\n    payload,\n  };\n};\nexport const modifyBoxes = (payload) => {\n  return {\n    type: \"MODIFY_BOXES\",\n    payload,\n  };\n};\nexport const saveShipmentData = () => {\n  return {\n    type: \"SAVE_SHIPMENT_DATA\",\n  };\n};\nexport const setSelectedCompany = (payload) => {\n  return {\n    type: \"SET_SELECTED_COMPANY\",\n    payload,\n  };\n};\n","export const getIsSidebarOpen = (state) => state.App.isSidebarOpen;\nexport const getShipmentData = (state) => state.App.shipmentData;\nexport const getSelectedCompany = (state) => state.App.selectedCompany;\nexport const getShouldFetch = (state) => state.App.shouldFetch;\n","import { makeStyles } from \"@material-ui/core/styles\";\n\nexport default makeStyles((theme) => ({\n  main: {\n    flexGrow: \"1\",\n    textAlign: \"left\",\n    marginTop: \"15px\",\n    marginLeft: \"30px\",\n    [theme.breakpoints.up(\"sm\")]: {\n      flexShrink: 0,\n    },\n  },\n  details: {\n    marginTop: \"20px\"\n  },\n  spinner: {\n    textAlign: \"center\",\n  },\n  input: {\n    minWidth: \"300px\",\n  },\n  // necessary for content to be below app bar\n  toolbar: theme.mixins.toolbar,\n}));\n","import React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useLocation, Route, Switch } from \"react-router-dom\";\nimport { useTheme } from \"@material-ui/core/styles\";\nimport { TextField, CircularProgress, Typography, Link } from \"@material-ui/core\";\n\nimport {\n  setSelectedCompany,\n  modifyBoxes,\n  getIsSidebarOpen,\n  getShipmentData,\n  getSelectedCompany,\n  getShouldFetch,\n} from \"../../redux/Index\";\n\nimport useStyles from \"./Main.styles\";\n\nfunction Main() {\n  const location = useLocation();\n  const dispatch = useDispatch();\n  const activeRoute = location.pathname.substring(15);\n\n  const [requiredBays, setRequiredBays] = useState(undefined);\n\n  const shouldFetch = useSelector(getShouldFetch);\n  const shipmentData = useSelector(getShipmentData);\n  const isSidebarOpen = useSelector(getIsSidebarOpen);\n  const selectedCompany = useSelector(getSelectedCompany);\n\n  const theme = useTheme();\n  const classes = useStyles(theme, isSidebarOpen);\n\n  useEffect(() => {\n    if (shipmentData) {\n      // set currently active company on redux depending on the selected route\n      shipmentData.forEach(\n        (company) => company.name === activeRoute && dispatch(setSelectedCompany(company)),\n      );\n    }\n  }, [activeRoute, dispatch, shipmentData, shouldFetch]);\n\n  useEffect(() => {\n    // calculate required cargo bays\n    if (selectedCompany) {\n      const add = (a, b) => a + b;\n      const boxes = selectedCompany?.boxes?.split(\",\").map((e) => +e);\n      let sum = boxes?.reduce(add);\n\n      if (sum < 0) sum = 0;\n\n      setRequiredBays((Math.ceil(sum / 10) * 10) / 10);\n    }\n  }, [selectedCompany]);\n\n  return (\n    <Switch>\n      <Route exact path={`/ADM-challenge/${selectedCompany.name}`}>\n        <main className={classes.main}>\n          <div className={classes.toolbar} />\n          {!shouldFetch ? (\n            <>\n              <Typography variant=\"h4\">{selectedCompany?.name}</Typography>\n              <Link variant=\"body1\" href={`mailto:${selectedCompany?.email}`}>\n                {selectedCompany?.email}\n              </Link>\n              <div className={classes.details}>\n                <Typography gutterBottom variant=\"body1\">\n                  Number of required cargo bays: <strong> {requiredBays || \"0\"} </strong>\n                </Typography>\n                <Typography gutterBottom variant=\"body1\">\n                  Cargo boxes\n                </Typography>\n                <TextField\n                  // dispatch the modified active company to redux\n                  onChange={(e) => dispatch(modifyBoxes(e.target.value))}\n                  className={classes.input}\n                  value={selectedCompany?.boxes || \"\"}\n                />\n              </div>\n            </>\n          ) : (\n            // if fetching data, display spinner\n            <div className={classes.spinner}>\n              <CircularProgress />\n            </div>\n          )}\n        </main>\n      </Route>\n    </Switch>\n  );\n}\nexport default Main;\n","import { makeStyles, fade } from \"@material-ui/core/styles\";\n\nexport default makeStyles((theme) => ({\n  header: {\n    zIndex: \"99\",\n    width: \"100%\",\n    display: \"flex\",\n    flexGrow: 1,\n    \"& .headerTitle\": {\n      [theme.breakpoints.down(\"md\")]: {\n        display: \"none\",\n      },\n      [theme.breakpoints.up(\"sm\")]: {\n        display: \"block\",\n      },\n    },\n    \"& .leftContainer, & .rightContainer\": {\n      display: \"flex\",\n      alignItems: \"center\",\n      \"& button\": {\n        marginLeft: \"10px\",\n      },\n    },\n  },\n  toolbar: {\n    justifyContent: \"space-between\",\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n    [theme.breakpoints.up(\"sm\")]: {\n      display: \"none\",\n    },\n  },\n  search: {\n    display: \"block\",\n    position: \"relative\",\n    borderRadius: theme.shape.borderRadius,\n    backgroundColor: fade(theme.palette.common.white, 0.15),\n    \"&:hover\": {\n      backgroundColor: fade(theme.palette.common.white, 0.25),\n    },\n    marginLeft: 0,\n    width: \"100%\",\n    [theme.breakpoints.down(\"md\")]: {\n      display: \"none\",\n    },\n    [theme.breakpoints.up(\"sm\")]: {\n      marginLeft: theme.spacing(1),\n      width: \"auto\",\n      display: \"block\",\n    },\n  },\n  searchIcon: {\n    padding: theme.spacing(0, 2),\n    height: \"100%\",\n    position: \"absolute\",\n    pointerEvents: \"none\",\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n  inputRoot: {\n    color: \"inherit\",\n  },\n  inputInput: {\n    padding: theme.spacing(1, 1, 1, 0),\n    // vertical padding + font size from searchIcon\n    paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\n    transition: theme.transitions.create(\"width\"),\n    width: \"100%\",\n    [theme.breakpoints.up(\"sm\")]: {\n      width: \"12ch\",\n      \"&:focus\": {\n        width: \"20ch\",\n      },\n    },\n  },\n}));\n","import React from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useTheme } from \"@material-ui/core/styles\";\nimport {\n  AppBar,\n  Toolbar,\n  IconButton,\n  Typography,\n  Button,\n  InputBase,\n  Snackbar,\n} from \"@material-ui/core\";\nimport MuiAlert from \"@material-ui/lab/Alert\";\n\nimport { Search, Menu } from \"@material-ui/icons\";\n\nimport { setIsOpen, setShouldFetch, saveShipmentData, getIsSidebarOpen } from \"../../redux/Index\";\nimport useStyles from \"./Header.styles\";\n\nfunction Header({ searchFilter, setSearchFilter }) {\n  const isSidebarOpen = useSelector(getIsSidebarOpen);\n  const [alertOpen, setAlertOpen] = React.useState(false);\n\n  const theme = useTheme();\n  const classes = useStyles(theme, isSidebarOpen);\n  const dispatch = useDispatch();\n\n  const handleAlertClose = (event, reason) => {\n    if (reason === \"clickaway\") {\n      return;\n    }\n    setAlertOpen(false);\n  };\n\n  function Alert(props) {\n    return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n  }\n\n  return (\n    <AppBar position=\"fixed\" className={classes.header}>\n      <Toolbar className={classes.toolbar}>\n        <div className=\"leftContainer\">\n          <IconButton\n            onClick={() => {\n              // handle whether sidebar is open or closed\n              dispatch(setIsOpen(!isSidebarOpen));\n            }}\n            className={classes.menuButton}\n            color=\"inherit\"\n            aria-label=\"open drawer\"\n          >\n            <Menu />\n          </IconButton>\n          <Typography className=\"headerTitle\" variant=\"h6\" noWrap>\n            Cargo planner\n          </Typography>\n          {/* search bar */}\n        </div>\n        <div className=\"rightContainer\">\n          <div className={classes.search}>\n            <div className={classes.searchIcon}>\n              <Search />\n            </div>\n            <InputBase\n              placeholder=\"Search…\"\n              classes={{\n                root: classes.inputRoot,\n                input: classes.inputInput,\n              }}\n              value={searchFilter || \"\"}\n              onChange={(e) => setSearchFilter(e.target.value)}\n              inputProps={{ \"aria-label\": \"search\" }}\n            />\n          </div>\n          {/* saves the changed values to redux (otherwise they reset when route is changed) */}\n          <Button\n            onClick={() => {\n              setAlertOpen(true);\n              dispatch(saveShipmentData());\n            }}\n            color=\"secondary\"\n            variant=\"contained\"\n          >\n            Save\n          </Button>\n          {/* reload the initial data from shipments.json */}\n          <Button\n            onClick={() => dispatch(setShouldFetch(true))}\n            color=\"secondary\"\n            variant=\"contained\"\n          >\n            Load\n          </Button>\n        </div>\n      </Toolbar>\n      {/* success message */}\n      <Snackbar open={alertOpen} autoHideDuration={3000} onClose={handleAlertClose}>\n        <Alert onClose={handleAlertClose} severity=\"success\">\n          Saved!\n        </Alert>\n      </Snackbar>\n    </AppBar>\n  );\n}\nexport default Header;\n","import { makeStyles } from \"@material-ui/core/styles\";\nconst drawerWidth = 240;\n\nexport default makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n  },\n  drawer: {\n    zIndex: \"90\",\n    [theme.breakpoints.up(\"sm\")]: {\n      width: drawerWidth,\n      flexShrink: 0,\n    },\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n    [theme.breakpoints.up(\"sm\")]: {\n      display: \"none\",\n    },\n  },\n  // necessary for content to be below app bar\n  toolbar: theme.mixins.toolbar,\n  drawerPaper: {\n    width: drawerWidth,\n  },\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing(3),\n  },\n}));\n","import React from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Drawer, Divider, List, ListItem, ListItemText, Hidden } from \"@material-ui/core\";\nimport { Link } from \"react-router-dom\";\n\nimport { setIsOpen, getIsSidebarOpen } from \"../../redux/Index\";\n\nimport useStyles from \"./Sidebar.styles\";\n\nfunction Sidebar({ shipmentData }) {\n  const isSidebarOpen = useSelector(getIsSidebarOpen);\n  const classes = useStyles(isSidebarOpen);\n  const dispatch = useDispatch();\n\n  const drawer = () => (\n    <div>\n      <div className={classes.toolbar} />\n      <Divider />\n      <List>\n        {/* displays the list of companies on the sidebar */}\n        {shipmentData.map(({ id, name }) => (\n          <ListItem component={Link} button key={id} to={`/ADM-challenge/${name}`}>\n            <ListItemText primary={name} />\n          </ListItem>\n        ))}\n      </List>\n    </div>\n  );\n\n  return shipmentData ? (\n    <nav className={classes.drawer} aria-label=\"mailbox folders\">\n      <Hidden smUp implementation=\"css\">\n        {/* sidebar for mobile */}\n        <Drawer\n          variant=\"temporary\"\n          anchor={\"left\"}\n          open={isSidebarOpen}\n          onClose={() => dispatch(setIsOpen(!isSidebarOpen))}\n          classes={{\n            paper: classes.drawerPaper,\n          }}\n          ModalProps={{\n            keepMounted: true,\n          }}\n        >\n          {drawer()}\n        </Drawer>\n      </Hidden>\n      {/* sidebar for desktop */}\n      <Hidden xsDown implementation=\"css\">\n        <Drawer\n          classes={{\n            paper: classes.drawerPaper,\n          }}\n          variant=\"permanent\"\n          open\n        >\n          {drawer()}\n        </Drawer>\n      </Hidden>\n    </nav>\n  ) : null;\n}\nexport default Sidebar;\n","import axios from \"axios\";\r\n\r\nconst shipmentsAPI = {\r\n  getShipments() {\r\n    return axios.get(\r\n      \"https://bitbucket.org/hpstore/spacex-cargo-planner/raw/204125d74487b1423bbf0453f4dcb53a2161353b/shipments.json\",\r\n    );\r\n  },\r\n};\r\n\r\nexport default shipmentsAPI;\r\n","import { makeStyles } from \"@material-ui/core/styles\";\n\nexport default makeStyles(() => ({\n  app: {\n    display: \"flex\",\n  },\n}));\n","import React, { useState, useEffect } from \"react\";\nimport { Switch } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nimport {\n  setShipmentData,\n  setShouldFetch,\n  getShipmentData,\n  getShouldFetch,\n} from \"../../redux/Index\";\n\nimport { Main, Header, Sidebar, ShipmentsAPI } from \"../Index\";\nimport useStyles from \"./App.styles\";\n\nfunction App() {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const shipmentData = useSelector(getShipmentData);\n  const shouldFetch = useSelector(getShouldFetch);\n\n  // handle search filtering\n  const [searchFilter, setSearchFilter] = useState(undefined);\n\n  useEffect(() => {\n    (async () => {\n      if (shouldFetch) {\n        // fetch the data from shipments.json\n        const { data } = await ShipmentsAPI.getShipments();\n\n        // sort the list alphabetically\n        data.sort((a, b) => {\n          const textA = a.name.toUpperCase();\n          const textB = b.name.toUpperCase();\n\n          return textA.localeCompare(textB);\n        });\n\n        if (data) {\n          dispatch(setShouldFetch(false));\n          // once the data is fetched, dispatch it to redux\n          dispatch(setShipmentData(data));\n        }\n      }\n    })();\n  }, [dispatch, shipmentData, shouldFetch]);\n\n  return shipmentData ? (\n      <div className={classes.app}>\n        <Header searchFilter={searchFilter} setSearchFilter={(e) => setSearchFilter(e)} />\n        <Sidebar\n          shipmentData={\n            searchFilter\n              ? shipmentData?.filter((text) => text?.name?.toLowerCase().includes(searchFilter))\n              : shipmentData\n          }\n        />\n        <Main shipmentData={shipmentData} />\n      </div>\n  ) : null;\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport { PersistGate } from \"redux-persist/integration/react\";\nimport { ThemeProvider } from \"@material-ui/styles\";\n\nimport { store, persistor } from \"./redux/ConfigureStore\";\nimport \"./index.css\";\nimport theme from \"./theme\";\n\nimport App from \"./components/App/App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <PersistGate loading={null} persistor={persistor}>\n      <ThemeProvider theme={theme}>\n        <Router>\n          <React.StrictMode>\n            <App />\n          </React.StrictMode>\n        </Router>\n      </ThemeProvider>\n    </PersistGate>\n  </Provider>,\n  document.getElementById(\"root\"),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}